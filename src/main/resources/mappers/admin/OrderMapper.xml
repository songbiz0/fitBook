<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fitbook.admin.AdminMapper">

    <sql id="searchSql">

        <where>
            <if test="statusNo != 1">
                order_status = #{status}
            </if>
            <if test="select != 'total'">
                AND ${select} LIKE CONCAT('%', #{search}, '%')
            </if>
            <if test="select == 'total'">
                AND (E.nm LIKE CONCAT('%', #{search}, '%') OR
                B.nm LIKE CONCAT('%', #{search}, '%') OR
                B.uid LIKE CONCAT('%', #{search}, '%'))
            </if>
            <if test="fstDate != null and fstDate != '' and secDate != null and secDate != ''">
                <![CDATA[ AND (#{fstDate} <= A.rdt AND DATE_ADD(#{secDate}, interval +1 day) >= A.rdt) ]]>
            </if>
        </where>

    </sql>

    <select id="selUserMaxPageVal" resultType="resultVo">
        SELECT CEIL(count(*) / ${recordCount}) AS result
        FROM t_user C
                 LEFT JOIN (
            SELECT A.iuser
            FROM t_user A
                     LEFT JOIN t_order B
                               ON A.iuser = B.iuser
            group by A.iuser
        ) D
                           on C.iuser = D.iuser
        where ${type} like concat('%', #{keyword}, '%')
    </select>

    <select id="selectUserSearchList" resultType="UserVo">
        SELECT A.iuser,
               A.uid,
               A.nm,
               A.email,
               c.a               AS recent_price,
               SUM(result_price) AS result_price,
               B.rdt             AS recent_rdt,
               A.rdt             AS join_rdt,
               A.point
        FROM t_user A
                 LEFT JOIN t_order B
                           ON A.iuser = B.iuser
                 LEFT JOIN (
            SELECT SUM(if(rdt BETWEEN DATE_ADD(NOW(), INTERVAL -1 MONTH) AND NOW(), result_price, 0)) AS a, iuser
            FROM t_order
            GROUP BY iuser
        ) C
                           ON A.iuser = C.iuser
        GROUP BY A.iuser
        HAVING ${type} LIKE CONCAT('%', #{keyword}, '%')
            LIMIT ${startIdx}
             , ${recordCount}
    </select>

    <select id="selOrderList" resultType="OrderVo">
        SELECT A.rdt, A.iorder, E.nm AS productNm
        , C.quantity, B.uid, B.nm AS userNm
        , A.spent_point, A.payment_way, A.order_status
        , A.result_price, A.cdt, B.iuser , (count(A.iorder)-1) AS cnt
        , D.img, D.idetail, D.color, D.hdd, D.ssd, E.product_code
        FROM t_order A
        inner JOIN t_user B
        ON A.iuser = B.iuser
        inner JOIN t_order_product C
        ON A.iorder = C.iorder
        inner JOIN t_product_detail D
        ON C.idetail = D.idetail
        inner JOIN t_product_master E
        ON E.iproduct = D.iproduct
        <include refid="searchSql"></include>
        GROUP BY A.iorder
        LIMIT ${startIdx}, ${rowCnt}
    </select>

    <select id="getOrderMaxPage" resultType="ResultVo">
        SELECT CEIL(COUNT(iorder) / ${rowCnt}) AS result
        FROM (
        SELECT A.iorder
        from t_order A
        inner JOIN t_user B
        ON A.iuser = B.iuser
        inner JOIN t_order_product C
        ON A.iorder = C.iorder
        inner JOIN t_product_detail D
        ON C.idetail = D.idetail
        inner JOIN t_product_master E
        ON E.iproduct = D.iproduct
        <include refid="searchSql"></include>
        GROUP BY A.iorder
        ) AS A
    </select>

    <select id="selProductDetail" resultType="ProductDetailVo">
        SELECT A.rdt
             , A.iorder
             , C.img
             , D.nm
             , D.product_code
             , C.color
             , C.hdd
             , C.ssd
             , B.result_price
             , B.quantity
             , D.brand
             , C.idetail
             , A.iuser
        FROM t_order A
                 INNER JOIN t_order_product B
                            ON A.iorder = B.iorder
                 INNER JOIN t_product_detail C
                            ON B.idetail = C.idetail
                 INNER JOIN t_product_master D
                            ON C.iproduct = D.iproduct
        WHERE A.iorder = ${iorder}
    </select>

    <select id="selOrderDetail" resultType="OrderDetailVo">
        SELECT A.iorder
             , B.receiver_nm
             , B.receiver_post
             , B.receiver_addr
             , B.receiver_addr_detail
             , B.receiver_phone
             , B.shipment_message
             , A.spent_point
             , A.payment_way
             , A.order_status
             , A.result_price
             , A.iuser
        FROM t_order A
                 INNER JOIN t_order_detail B
                            ON A.iorder = B.iorder
        WHERE A.iorder = ${iorder}
    </select>

    <select id="selProductDetailListForQuantity" resultType="OrderVo">
        SELECT quantity, idetail
        FROM t_order_product
        WHERE iorder = ${iorder}
    </select>

    <update id="updOrderStatus">
        UPDATE t_order
        SET order_status = #{order_status}, pre_order_status = #{pre_order_status}
        <if test="cdt != null and cdt != ''">, cdt = now()</if>
        WHERE iorder = ${iorder}
    </update>
    <update id="returnPoint">
         INSERT INTO t_point
         (iuser, changed_point, reason)
         VALUES
         (${iuser}, ${changed_point}, #{reason})
    </update>
    <update id="updProductDetailStock">
        UPDATE t_product_detail
        SET stock = stock <if test="oper == 0">-</if><if test="oper == 1">+</if> ${quantity}
        WHERE idetail = ${idetail}
    </update>

</mapper>