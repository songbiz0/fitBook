<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fitbook.shop.ShopMapper">
    <sql id="condition">
        <if test="brand != null and brand.size != 0">
            <foreach collection="brand" item="item" open="AND A.brand IN (" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="cpu != null and cpu.size != 0">
            <foreach collection="cpu" item="item" open="AND C.nm IN (" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="innerGpu">
            AND D.is_inner_gpu = 'Y'
        </if>
        <if test="gpu != null and gpu.size != 0 and !innerGpu">
            <foreach collection="gpu" item="item" open="AND D.nm IN (" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="size != null and size.size != 0">
            <foreach collection="size" item="item" open="AND (" separator="OR" close=")">
                FLOOR(A.size) = #{item}
            </foreach>
        </if>
        <if test="ram != null and ram.size != 0">
            <foreach collection="ram" item="item" open="AND A.ram IN (" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="os != null and os.size != 0">
            <foreach collection="os" item="item" open="AND A.os IN (" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="weight != null and weight.size != 0">
            <foreach collection="weight" item="item" open="AND (" separator="OR" close=")">
                A.weight BETWEEN SUBSTRING_INDEX(#{item}, '~', 1) AND SUBSTRING_INDEX(#{item}, '~', -1)
            </foreach>
        </if>
        <if test="res != null and res.size != 0">
            <foreach collection="res" item="item" open="AND A.resolution IN (" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="hz != null and hz.size != 0">
            <foreach collection="hz" item="item" open="AND A.hz IN (" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="battery != null and battery.size != 0">
            <foreach collection="battery" item="item" open="AND (" separator="OR" close=")">
                A.battery BETWEEN SUBSTRING_INDEX(#{item}, '~', 1) AND SUBSTRING_INDEX(#{item}, '~', -1)
            </foreach>
        </if>
        <if test="etc != null and etc.size != 0">
            AND A.istwoinone = 'Y'
        </if>
    </sql>

    <select id="selMaxPage" resultType="Integer">
        SELECT CEIL(COUNT(A.iproduct) / ${recordCount})
        FROM t_product_master A
        INNER JOIN t_product_detail B
        ON A.iproduct = B.iproduct
        INNER JOIN t_product_cpu C
        ON A.icpu = C.icpu
        INNER JOIN t_product_gpu D
        ON A.igpu = D.igpu
        WHERE B.isrep = 'Y'
        <include refid="condition"></include>
    </select>

    <select id="selProductList" resultType="ProductVo">
        SELECT A.ram, A.size, A.weight, A.brand, A.os,
        A.battery, A.istwoinone, A.hz, A.resolution, ROUND(B.price * (1 - B.dc_rate), -3) AS price,
        C.performance AS cpuPerformance, D.performance AS gpuPerformance, B.img AS detailImg, A.nm, A.product_code,
        C.nm AS cpuNm, D.nm AS gpuNm, B.price AS originalPrice, B.idetail, A.iproduct, D.is_inner_gpu
        <if test="sort == 'best'">, ifnull(E.amount, 0) AS amount</if>
        FROM t_product_master A
        INNER JOIN t_product_detail B
        ON A.iproduct = B.iproduct
        INNER JOIN t_product_cpu C
        ON A.icpu = C.icpu
        INNER JOIN t_product_gpu D
        ON A.igpu = D.igpu
        <if test="sort == 'best'">
            LEFT JOIN (
            SELECT COUNT(C.iproduct) AS amount, C.iproduct
            FROM t_order_product A
            INNER JOIN t_product_detail B
            ON A.idetail = B.idetail
            INNER JOIN t_product_master C
            ON B.iproduct = C.iproduct
            GROUP BY C.iproduct
            ) E
            ON A.iproduct = E.iproduct
        </if>
        WHERE B.isrep = 'Y'
        <include refid="condition"></include>
        <if test="sort == 'best'">
            ORDER BY E.amount DESC
        </if>
        <if test="sort == 'new'">
            ORDER BY A.rdt DESC
        </if>
        <if test="sort == 'lowPrice'">
            ORDER BY B.price
        </if>
        <if test="sort == 'highPrice'">
            ORDER BY B.price DESC
        </if>
        LIMIT ${startIdx}, ${recordCount}
    </select>

    <select id="selProductDetail" resultType="ProductVo">
        SELECT A.ram,
               A.size,
               A.weight,
               A.brand,
               A.os,
               A.battery,
               A.istwoinone,
               A.hz,
               A.resolution,
               ROUND(B.price * (1 - B.dc_rate), -3) AS price,
               C.performance                        AS cpuPerformance,
               D.performance                        AS gpuPerformance,
               B.img                                AS detailImg,
               A.nm,
               A.product_code,
               C.nm                                 AS cpuNm,
               D.nm                                 AS gpuNm,
               B.price                              AS originalPrice,
               B.idetail,
               A.iproduct,
               A.img
        FROM t_product_master A
                 INNER JOIN t_product_detail B
                            ON A.iproduct = B.iproduct
                 INNER JOIN t_product_cpu C
                            ON A.icpu = C.icpu
                 INNER JOIN t_product_gpu D
                            ON A.igpu = D.igpu
                 LEFT JOIN (
            SELECT ROUND(AVG(rating), 1) AS rating, COUNT(iuser) AS ratingCount, iproduct
            FROM t_product_review
            GROUP BY iproduct
        ) E
                           ON A.iproduct = E.iproduct
        WHERE B.isrep = 'Y'
          AND A.iproduct = #{iproduct}
    </select>

    <select id="selColorList" resultType="ColorDto">
        SELECT color, idetail, img, iproduct
        FROM t_product_detail
        WHERE iproduct = #{iproduct}
        GROUP BY color
        ORDER BY isrep DESC, idetail
    </select>

    <select id="selOptionList" resultType="OptionDto">
        SELECT hdd, ssd, color, idetail
        FROM t_product_detail
        WHERE iproduct = #{iproduct}
        ORDER BY isrep DESC, idetail
    </select>

    <select id="selReviewMaxPage" resultType="ResultVo">
        SELECT CEIL(COUNT(iproduct) / ${recordCount}) AS result
        FROM t_product_review
        WHERE iproduct = #{iproduct}
    </select>

    <select id="selReviewList" resultType="ProductReviewVo">
        SELECT A.rating, A.ctnt, A.rdt, B.nm AS userNm, A.iuser
        FROM t_product_review A
                 INNER JOIN t_user B
                            ON A.iuser = B.iuser
        WHERE A.iproduct = #{iproduct}
        ORDER BY A.rdt DESC
        LIMIT #{startIdx}, #{recordCount}
    </select>

    <insert id="insReview">
        INSERT INTO t_product_review
            (iproduct, iuser, rating, ctnt)
        VALUES (#{iproduct}, #{iuser}, #{rating}, #{ctnt})
        ON DUPLICATE KEY UPDATE rating = #{rating},
                                ctnt   = #{ctnt}
    </insert>

    <delete id="delReview">
        DELETE
        FROM t_product_review
        WHERE iuser = #{iuser}
          AND iproduct = #{iproduct}
    </delete>

    <select id="selOrderCount" resultType="ResultVo">
        SELECT COUNT(A.iorder) AS result
        FROM t_order A
                 INNER JOIN t_order_product B
                            ON A.iorder = B.iorder
                 INNER JOIN t_product_detail C
                            ON B.idetail = C.idetail
                 INNER JOIN t_product_master D
                            ON C.iproduct = D.iproduct
        WHERE A.iuser = #{iuser}
          AND D.iproduct = #{iproduct}
          AND A.order_status = '구매확정'
    </select>

    <select id="selQuestionMaxPage" resultType="ResultVo">
        SELECT CEIL(COUNT(iquestion) / ${recordCount}) AS result
        FROM t_product_question
        WHERE iproduct = #{iproduct}
          AND parent = 0
    </select>

    <select id="selQuestionList" resultType="ProductQuestionVo">
        SELECT A.iquestion, A.iuser, A.ctnt, A.rdt, A.parent,
        B.nm AS nm
        FROM t_product_question A
        INNER JOIN t_user B
        ON A.iuser = B.iuser
        WHERE A.iproduct = #{iproduct}
        AND A.parent = #{parent}
        ORDER BY A.iquestion DESC
        <if test="parent == 0">
            LIMIT #{startIdx}, #{recordCount}
        </if>
    </select>

    <insert id="insQuestion">
        INSERT INTO t_product_question
            (iproduct, iuser, ctnt, parent)
        VALUES (#{iproduct}, #{iuser}, #{ctnt}, #{parent})
    </insert>

    <update id="updQuestion">
        UPDATE t_product_question
        SET ctnt = #{ctnt}
        WHERE iuser = #{iuser}
          AND iquestion = #{iquestion}
    </update>

    <delete id="delQuestion">
        DELETE
        FROM t_product_question
        WHERE iuser = #{iuser}
          AND iproduct = #{iproduct}
          AND iquestion = #{iquestion}
    </delete>

    <select id="selPrice" resultType="ProductVo">
        SELECT ROUND(price * (1 - dc_rate), -3) AS price, price AS originalPrice
        FROM t_product_detail
        WHERE idetail = #{idetail}
    </select>

    <select id="selBrandList" resultType="String">
        SELECT DISTINCT brand
        FROM t_product_master
        ORDER BY brand;
    </select>

    <select id="selCpuList" resultType="String">
        SELECT DISTINCT nm
        FROM t_product_cpu
        WHERE brand = #{brand}
        ORDER BY seq DESC, performance DESC
    </select>

    <select id="selGpuList" resultType="String">
        SELECT DISTINCT nm
        FROM t_product_gpu
        WHERE is_inner_gpu = 'N'
          AND brand = #{brand}
        ORDER BY seq DESC, performance DESC
    </select>

    <select id="selCartList" resultType="ProductDetailVo">
        SELECT B.img,
               A.brand,
               A.nm,
               A.product_code,
               B.color,
               B.hdd,
               B.ssd,
               B.stock,
               B.price                              AS originalPrice,
               ROUND(B.price * (1 - B.dc_rate), -3) AS price,
               B.idetail,
               C.quantity
        FROM t_product_master A
                 INNER JOIN t_product_detail B
                            ON A.iproduct = B.iproduct
                 INNER JOIN t_cart C
                            ON B.idetail = C.idetail
        WHERE iuser = #{iuser}
    </select>

    <update id="updCart">
        UPDATE t_cart
        SET quantity = #{quantity}
        WHERE iuser = #{iuser}
        AND idetail = #{idetail}
    </update>

    <delete id="delCart">
        DELETE FROM t_cart
        <foreach collection="list" item="item" open="WHERE idetail IN (" separator="," close=")">
            #{item}
        </foreach>
        AND iuser = #{iuser}
    </delete>

    <select id="selAddr" resultType="AddressEntity">
        SELECT user_nm, post, addr, addr_detail, phone, isrep
        FROM t_address
        WHERE iuser = #{iuser}
        <if test="iaddress != null and iaddress != 0">
            AND iaddress = #{iaddress}
        </if>
        <if test="param == 'rep'">
            AND isrep = 'Y'
        </if>
        <if test="param == 'latest'">
            AND islatest = 'Y'
        </if>
    </select>

    <insert id="insOrder" useGeneratedKeys="true" keyProperty="iorder">
        INSERT INTO t_order
            (iuser, spent_point, payment_way, result_price, order_status)
        VALUES
            (#{iuser}, #{spent_point}, #{payment_way}, (
                SELECT SUM(ROUND(A.price * (1 - A.dc_rate), -3) * B.quantity) - #{spent_point}
                FROM t_product_detail A
                         INNER JOIN t_cart B
                                    ON A.idetail = B.idetail
                WHERE B.iuser = #{iuser}
                  AND A.idetail IN (<foreach collection="idetailList" item="item" separator=",">#{item}</foreach>)
                ), #{order_status})
    </insert>

    <insert id="insDetailOrder">
        INSERT INTO t_order_detail
            (iorder, receiver_nm, receiver_post, receiver_addr, receiver_addr_detail, receiver_phone, shipment_message)
        VALUES
            (#{iorder}, #{receiver_nm}, #{receiver_post}, #{receiver_addr}, #{receiver_addr_detail}, #{receiver_phone}, #{shipment_message})
    </insert>

    <insert id="insOrderProduct">
        INSERT INTO t_order_product
            (iorder, idetail, quantity, result_price)
        VALUES
            <foreach collection="idetailList" item="item" separator=",">
                (#{iorder}, #{item}, (
                    SELECT quantity
                    FROM t_cart
                    WHERE iuser = #{iuser}
                    AND idetail = #{item}
                ), (
                    SELECT ROUND(A.price * (1 - A.dc_rate), -3) * B.quantity
                    FROM t_product_detail A
                    INNER JOIN t_cart B
                    ON A.idetail = B.idetail
                    WHERE B.iuser = #{iuser}
                    AND A.idetail = #{item}
                ))
            </foreach>
    </insert>
</mapper>